Queues are frequently used in computer programming, and a typical example is the creation of a job queue by an operating system.
If the operating system does not use priorities, then the jobs are processed in the order they enter the system.
Write C++ program for simulating job queue.
Write functions to add job and delete job from queue.

#include <iostream>
#include <queue>
#include <string>

using namespace std;

int main() {
    queue<string> jobQueue; // Queue to store jobs
    int choice;
    string job;

    do {
        // Display menu
        cout << "\nJob Queue Menu:\n";
        cout << "1. Add Job\n";
        cout << "2. Delete Job\n";
        cout << "3. Display Jobs\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                // Add a job to the queue
                cout << "Enter job name: ";
                cin.ignore(); // Clear newline from input buffer
                getline(cin, job);
                jobQueue.push(job);
                cout << "Job \"" << job << "\" added to the queue.\n";
                break;
            }
            case 2: {
                // Delete a job from the queue
                if (jobQueue.empty()) {
                    cout << "No jobs to delete. The queue is empty.\n";
                } else {
                    cout << "Job \"" << jobQueue.front() << "\" deleted from the queue.\n";
                    jobQueue.pop();
                }
                break;
            }
            case 3: {
                // Display all jobs in the queue
                if (jobQueue.empty()) {
                    cout << "The job queue is empty.\n";
                } else {
                    cout << "Jobs in the queue:\n";
                    queue<string> tempQueue = jobQueue; // Copy to avoid modifying original queue
                    while (!tempQueue.empty()) {
                        cout << tempQueue.front() << endl;
                        tempQueue.pop();
                    }
                }
                break;
            }
            case 4:
                cout << "Exiting program. Goodbye!\n";
                break;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 4);

    return 0;
}
